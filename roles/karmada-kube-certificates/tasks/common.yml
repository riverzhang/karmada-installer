---
- name: Create karmada certificate request configuration
  template:
    src: kube-openssl.cnf.j2
    dest: /etc/karmada/pki/kube-openssl.cnf
    owner: root
    mode: 0644

- name: Create karmada-ca root certificate private key
  shell: openssl genrsa -out /etc/karmada/pki/ca.key 2048  # noqa 305
  when: ca_key_stat.stat.isreg is not defined

- name: Create karmada-ca root certificate
  shell: >
    openssl req -x509 -new -nodes
    -extensions v3_ca -subj "/CN=karmada"
    -config /etc/karmada/pki/kube-openssl.cnf
    -key /etc/karmada/pki/ca.key
    -out /etc/karmada/pki/ca.crt
    -days {{ certs_expired }}
  when: ca_crt_stat.stat.isreg is not defined

- name: Create front-proxy-ca certificate private key
  shell: openssl genrsa -out /etc/karmada/pki/front-proxy-ca.key 2048  # noqa 305
  when: front_proxy_ca_key_stat.stat.isreg is not defined

- name: Create front-proxy-ca root certificate
  shell: >
    openssl req -x509 -new -nodes
    -extensions v3_ca -subj "/CN=kubernetes"
    -config /etc/karmada/pki/kube-openssl.cnf
    -key /etc/karmada/pki/front-proxy-ca.key
    -out /etc/karmada/pki/front-proxy-ca.crt
    -days {{ certs_expired }}
  when: front_proxy_ca_crt_stat.stat.isreg is not defined

- name: Create apiserver certificate private key
  shell: openssl genrsa -out /etc/karmada/pki/apiserver.key 2048  # noqa 305
  when: apiserver_key_stat.stat.isreg is not defined

- name: Create apiserver certificate request
  shell: >
    openssl req -new
    -subj "/CN=kube-apiserver"
    -key /etc/karmada/pki/apiserver.key
    -out /etc/karmada/pki/apiserver.csr

- name: Create apiserver certificate
  shell: >
    openssl x509 -req -CAcreateserial
    -extensions v3_req_server
    -extfile /etc/karmada/pki/kube-openssl.cnf
    -CA /etc/karmada/pki/ca.crt
    -CAkey /etc/karmada/pki/ca.key
    -in /etc/karmada/pki/apiserver.csr
    -out /etc/karmada/pki/apiserver.crt
    -days {{ certs_expired }}

- name: Create apiserver-kubelet-client certificate private key
  shell: openssl genrsa -out /etc/karmada/pki/apiserver-kubelet-client.key 2048  # noqa 305
  when: apiserver_kubelet_client_key_stat.stat.isreg is not defined

- name: Create apiserver-kubelet-client certificate request
  shell: >
    openssl req -new
    -subj "/CN=kube-apiserver-kubelet-client/O=system:masters"
    -key /etc/karmada/pki/apiserver-kubelet-client.key
    -out /etc/karmada/pki/apiserver-kubelet-client.csr

- name: Create apiserver-kubelet-client certificate
  shell: >
    openssl x509 -req -CAcreateserial
    -extensions v3_req_client
    -extfile /etc/karmada/pki/kube-openssl.cnf
    -CA /etc/karmada/pki/ca.crt
    -CAkey /etc/karmada/pki/ca.key
    -in /etc/karmada/pki/apiserver-kubelet-client.csr
    -out /etc/karmada/pki/apiserver-kubelet-client.crt
    -days {{ certs_expired }}

- name: Create front-proxy-client certificate private key
  shell: openssl genrsa -out /etc/karmada/pki/front-proxy-client.key 2048  # noqa 305
  when: front_proxy_client_key_stat.stat.isreg is not defined

- name: Create front-proxy-client certificate request
  shell: >
    openssl req -new
    -subj "/CN=front-proxy-client"
    -key /etc/karmada/pki/front-proxy-client.key
    -out /etc/karmada/pki/front-proxy-client.csr

- name: Create front-proxy-client certificate
  shell: >
    openssl x509 -req -CAcreateserial
    -extensions v3_req_client
    -extfile /etc/karmada/pki/kube-openssl.cnf
    -CA /etc/karmada/pki/front-proxy-ca.crt
    -CAkey /etc/karmada/pki/front-proxy-ca.key
    -in /etc/karmada/pki/front-proxy-client.csr
    -out /etc/karmada/pki/front-proxy-client.crt
    -days {{ certs_expired }}

- name: Create kube-scheduler certificate private key
  shell: openssl genrsa -out /etc/karmada/pki/kube-scheduler.key 2048  # noqa 305
  when: kube_scheduler_key_stat.stat.isreg is not defined

- name: Create kube-scheduler certificate request
  shell: >
    openssl req -new
    -subj "/CN=system:kube-scheduler"
    -key /etc/karmada/pki/kube-scheduler.key
    -out /etc/karmada/pki/kube-scheduler.csr

- name: Create kube-scheduler certificate
  shell: >
    openssl x509 -req -CAcreateserial
    -extensions v3_req_client
    -extfile /etc/karmada/pki/kube-openssl.cnf
    -CA /etc/karmada/pki/ca.crt
    -CAkey /etc/karmada/pki/ca.key
    -in /etc/karmada/pki/kube-scheduler.csr
    -out /etc/karmada/pki/kube-scheduler.crt
    -days {{ certs_expired }}

- name: Create sa certificate private key
  shell: openssl genrsa -out /etc/karmada/pki/sa.key 2048  # noqa 305
  when: sa_key_stat.stat.isreg is not defined

- name: Generate the public key from the sa private key
  shell: openssl rsa -in /etc/karmada/pki/sa.key -pubout -out /etc/karmada/pki/sa.pub  # noqa 305
  when: sa_pud_stat.stat.isreg is not defined

- name: link sa certificate private key to kube-controller-manager certificate private key
  file:
    src: /etc/karmada/pki/sa.key
    dest: /etc/karmada/pki/kube-controller-manager.key
    state: link
  run_once: true
  delegate_to: "{{ groups['karmada-controlplane'][0] }}"

- name: Create kube-controller-manager certificate request
  shell: >
    openssl req -new
    -subj "/CN=system:kube-controller-manager"
    -key /etc/karmada/pki/sa.key
    -out /etc/karmada/pki/kube-controller-manager.csr

- name: Create kube-controller-manager certificate
  shell: >
    openssl x509 -req -CAcreateserial
    -extensions v3_req_client
    -extfile /etc/karmada/pki/kube-openssl.cnf
    -CA /etc/karmada/pki/ca.crt
    -CAkey /etc/karmada/pki/ca.key
    -in /etc/karmada/pki/kube-controller-manager.csr
    -out /etc/karmada/pki/kube-controller-manager.crt
    -days {{ certs_expired }}

- name: Create karmada cluster admin certificate private key
  shell: openssl genrsa -out /etc/karmada/pki/admin.key 2048  # noqa 305
  when: admin_key_stat.stat.isreg is not defined

- name: Create karmada cluster admin certificate request
  shell: >
    openssl req -new
    -subj "/CN=kubernetes-admin/O=system:masters"
    -key /etc/karmada/pki/admin.key
    -out /etc/karmada/pki/admin.csr

- name: Create karmada cluster admin certificate
  shell: >
    openssl x509 -req -CAcreateserial
    -extensions v3_req_client
    -extfile /etc/karmada/pki/kube-openssl.cnf
    -CA /etc/karmada/pki/ca.crt
    -CAkey /etc/karmada/pki/ca.key
    -in /etc/karmada/pki/admin.csr
    -out /etc/karmada/pki/admin.crt
    -days {{ certs_expired }}

- name: Retrieves the control node request file that needs to be cleaned
  find:
    paths: /etc/karmada/pki/
    patterns: '*.csr'
  register: files_to_purge_for_csr

- name: Clean up control node certificate request file
  file:
    path: "{{ item.path }}"
    state: absent
  no_log: true
  with_items: "{{ files_to_purge_for_csr.files }}"
